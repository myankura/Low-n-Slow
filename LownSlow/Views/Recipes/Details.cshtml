@model LownSlow.Models.RecipeViewModels.RecipeIngredientsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Recipe</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Directions)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Directions)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Comment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Comment)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Favorite)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Favorite)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.TechniqueId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.TechniqueId)
        </dd>
        <dd class="col-sm-10">
            @foreach (var item in Model.Recipe.IngredientLists)
            {
        <dt class="col-sm-2">
            @Html.DisplayFor(model => item.Ingredient.Name)
            @Html.DisplayFor(model => item.Quantity)
            @Html.DisplayFor(model => item.Measurement)
        </dt>
        }
            </dd>
        </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Recipe.RecipeId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
